#!/bin/bash

##
#
# Rob Bauer       01-OCT-2011
# Script to find duplicates, preserving the oldest dated file and handling
# multiple duplicate files.  
#
# Example usage:
#
#	- find duplicates in current and subdirectories
#	finddups
#
#	- find duplicates in different directory and its subdirectories
#	finddups [path]
#
#	- list all files that where duplicated
#	finddups --list
#
#	- remove files (script will *NOT* prompt user to delete each one)
#   - use at your own risk
#	finddups --rm
#
# Known issues:
#	Script does not use cmp to do a direct file comparison and is strictly
#	based on md5sum which may produce hash collisions and false duplicate
#	matches.
#
# This script is a for/while loop free.
#
##

# set the default dir to search from, if not specified on the command line
defaultdir=.
isRemove=0
isList=0
SCRIPTDIR="$( cd -P "$( dirname "$0" )" && pwd )"

# process command line args
while [ "$1" != "" ]; do
	case $1 in
		--long )
					isList=1
					;;
		--rm )
					isRemove=1
					;;
		* )
					defaultdir=$1
					;;
	esac
	shift
done

# check if the defaultdir is actually a file - if its a file, calc the hash
# and date
if [ -f "$defaultdir" ] ; then
	# calc the md5sum
	md5hash=`md5sum "$defaultdir" | cut -d ' ' -f1`

	# get the file date and time
	filedate=`find $defaultdir -not -empty -type f -printf "%TY%Tm%Td%TH%TM%TS"`

	echo "$md5hash $filedate $defaultdir"

	exit 0
fi

# get a list of files once to use throughout the script
# pipes back to itself to get the md5sum hash, file date, and file name on one 
# line so the sort can find the matching hash AND oldest file (so it can be
# kept)
filelist=`find $defaultdir -not -empty -type f -print0 | xargs -0 -I% "$SCRIPTDIR"/finddups % | sort`

# check if user wanted full output
if [ "$isList" = "1" ]; then
	# show a list of all files, separating the different sets of duplicates
	echo "$filelist" | uniq -w32 -d --all-repeated=separate	| cut -d ' ' -f3
else
	# show a list of duplicate files
	keeplist=`echo "$filelist" | uniq -w32 -d`
	duplist=`echo "$filelist" | uniq -w32 -D | grep -v "$keeplist" | cut -d ' ' -f3`
	echo "$duplist"

	# remove files
	if [ "$isRemove" = "1" ]; then
		# add "-pr" to have rm delete with prompting
		echo "$duplist" | xargs -I% rm %
	fi
fi
